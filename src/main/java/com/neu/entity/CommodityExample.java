package com.neu.entity;

import java.util.ArrayList;
import java.util.List;

public class CommodityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commodity
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commodity
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commodity
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public CommodityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commodity
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andComnameIsNull() {
            addCriterion("ComName is null");
            return (Criteria) this;
        }

        public Criteria andComnameIsNotNull() {
            addCriterion("ComName is not null");
            return (Criteria) this;
        }

        public Criteria andComnameEqualTo(String value) {
            addCriterion("ComName =", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameNotEqualTo(String value) {
            addCriterion("ComName <>", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameGreaterThan(String value) {
            addCriterion("ComName >", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameGreaterThanOrEqualTo(String value) {
            addCriterion("ComName >=", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameLessThan(String value) {
            addCriterion("ComName <", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameLessThanOrEqualTo(String value) {
            addCriterion("ComName <=", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameLike(String value) {
            addCriterion("ComName like", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameNotLike(String value) {
            addCriterion("ComName not like", value, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameIn(List<String> values) {
            addCriterion("ComName in", values, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameNotIn(List<String> values) {
            addCriterion("ComName not in", values, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameBetween(String value1, String value2) {
            addCriterion("ComName between", value1, value2, "comname");
            return (Criteria) this;
        }

        public Criteria andComnameNotBetween(String value1, String value2) {
            addCriterion("ComName not between", value1, value2, "comname");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("Price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("Price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Double value) {
            addCriterion("Price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Double value) {
            addCriterion("Price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Double value) {
            addCriterion("Price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("Price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Double value) {
            addCriterion("Price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Double value) {
            addCriterion("Price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Double> values) {
            addCriterion("Price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Double> values) {
            addCriterion("Price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Double value1, Double value2) {
            addCriterion("Price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Double value1, Double value2) {
            addCriterion("Price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andBescribeIsNull() {
            addCriterion("Bescribe is null");
            return (Criteria) this;
        }

        public Criteria andBescribeIsNotNull() {
            addCriterion("Bescribe is not null");
            return (Criteria) this;
        }

        public Criteria andBescribeEqualTo(String value) {
            addCriterion("Bescribe =", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeNotEqualTo(String value) {
            addCriterion("Bescribe <>", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeGreaterThan(String value) {
            addCriterion("Bescribe >", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeGreaterThanOrEqualTo(String value) {
            addCriterion("Bescribe >=", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeLessThan(String value) {
            addCriterion("Bescribe <", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeLessThanOrEqualTo(String value) {
            addCriterion("Bescribe <=", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeLike(String value) {
            addCriterion("Bescribe like", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeNotLike(String value) {
            addCriterion("Bescribe not like", value, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeIn(List<String> values) {
            addCriterion("Bescribe in", values, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeNotIn(List<String> values) {
            addCriterion("Bescribe not in", values, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeBetween(String value1, String value2) {
            addCriterion("Bescribe between", value1, value2, "bescribe");
            return (Criteria) this;
        }

        public Criteria andBescribeNotBetween(String value1, String value2) {
            addCriterion("Bescribe not between", value1, value2, "bescribe");
            return (Criteria) this;
        }

        public Criteria andSurplusIsNull() {
            addCriterion("Surplus is null");
            return (Criteria) this;
        }

        public Criteria andSurplusIsNotNull() {
            addCriterion("Surplus is not null");
            return (Criteria) this;
        }

        public Criteria andSurplusEqualTo(Integer value) {
            addCriterion("Surplus =", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusNotEqualTo(Integer value) {
            addCriterion("Surplus <>", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusGreaterThan(Integer value) {
            addCriterion("Surplus >", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusGreaterThanOrEqualTo(Integer value) {
            addCriterion("Surplus >=", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusLessThan(Integer value) {
            addCriterion("Surplus <", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusLessThanOrEqualTo(Integer value) {
            addCriterion("Surplus <=", value, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusIn(List<Integer> values) {
            addCriterion("Surplus in", values, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusNotIn(List<Integer> values) {
            addCriterion("Surplus not in", values, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusBetween(Integer value1, Integer value2) {
            addCriterion("Surplus between", value1, value2, "surplus");
            return (Criteria) this;
        }

        public Criteria andSurplusNotBetween(Integer value1, Integer value2) {
            addCriterion("Surplus not between", value1, value2, "surplus");
            return (Criteria) this;
        }

        public Criteria andLargercategoryIsNull() {
            addCriterion("Lclassify_No is null");
            return (Criteria) this;
        }

        public Criteria andLargercategoryIsNotNull() {
            addCriterion("Lclassify_No is not null");
            return (Criteria) this;
        }

        public Criteria andLargercategoryEqualTo(LargerCategory value) {
            addCriterion("Lclassify_No =", value.getId(), "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryNotEqualTo(LargerCategory value) {
            addCriterion("Lclassify_No <>", value, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryGreaterThan(LargerCategory value) {
            addCriterion("Lclassify_No >", value, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryGreaterThanOrEqualTo(LargerCategory value) {
            addCriterion("Lclassify_No >=", value, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryLessThan(LargerCategory value) {
            addCriterion("Lclassify_No <", value, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryLessThanOrEqualTo(LargerCategory value) {
            addCriterion("Lclassify_No <=", value, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryIn(List<LargerCategory> values) {
            addCriterion("Lclassify_No in", values, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryNotIn(List<LargerCategory> values) {
            addCriterion("Lclassify_No not in", values, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryBetween(LargerCategory value1, LargerCategory value2) {
            addCriterion("Lclassify_No between", value1, value2, "largercategory");
            return (Criteria) this;
        }

        public Criteria andLargercategoryNotBetween(LargerCategory value1, LargerCategory value2) {
            addCriterion("Lclassify_No not between", value1, value2, "largercategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryIsNull() {
            addCriterion("Sclassify_No is null");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryIsNotNull() {
            addCriterion("Sclassify_No is not null");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryEqualTo(SmallCategory value) {
            addCriterion("Sclassify_No =", value.getId(), "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryNotEqualTo(SmallCategory value) {
            addCriterion("Sclassify_No <>", value, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryGreaterThan(SmallCategory value) {
            addCriterion("Sclassify_No >", value, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryGreaterThanOrEqualTo(SmallCategory value) {
            addCriterion("Sclassify_No >=", value, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryLessThan(SmallCategory value) {
            addCriterion("Sclassify_No <", value, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryLessThanOrEqualTo(SmallCategory value) {
            addCriterion("Sclassify_No <=", value, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryIn(List<SmallCategory> values) {
            addCriterion("Sclassify_No in", values, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryNotIn(List<SmallCategory> values) {
            addCriterion("Sclassify_No not in", values, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryBetween(SmallCategory value1, SmallCategory value2) {
            addCriterion("Sclassify_No between", value1, value2, "smallcategory");
            return (Criteria) this;
        }

        public Criteria andSmallcategoryNotBetween(SmallCategory value1, SmallCategory value2) {
            addCriterion("Sclassify_No not between", value1, value2, "smallcategory");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commodity
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

		public Criteria andLargercategoryEqualTo(String string) {
			// TODO Auto-generated method stub
			return null;
		}
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commodity
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}